// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// BuildTypeLocator Represents a locator string for filtering BuildType entities.
//
// swagger:model BuildTypeLocator
type BuildTypeLocator struct {

	// Project (direct or indirect parent) locator.
	AffectedProject string `json:"affectedProject,omitempty"`

	// Build locator.
	Build string `json:"build,omitempty"`

	// For paginated calls, how many entities to return per page.
	Count int32 `json:"count,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// internal Id
	InternalID string `json:"internalId,omitempty"`

	// Supply multiple locators and return a union of the results.
	Item string `json:"item,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// Is paused.
	Paused bool `json:"paused,omitempty"`

	// Project (direct parent) locator.
	Project string `json:"project,omitempty"`

	// For paginated calls, from which entity to start rendering the page.
	Start int32 `json:"start,omitempty"`

	// Base template locator.
	Template string `json:"template,omitempty"`

	// Is a template.
	TemplateFlag bool `json:"templateFlag,omitempty"`

	// uuid
	UUID string `json:"uuid,omitempty"`

	// VCS root locator.
	VcsRoot string `json:"vcsRoot,omitempty"`

	// VCS root instance locator.
	VcsRootInstance string `json:"vcsRootInstance,omitempty"`
}

// Validate validates this build type locator
func (m *BuildTypeLocator) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this build type locator based on context it is used
func (m *BuildTypeLocator) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *BuildTypeLocator) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BuildTypeLocator) UnmarshalBinary(b []byte) error {
	var res BuildTypeLocator
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
