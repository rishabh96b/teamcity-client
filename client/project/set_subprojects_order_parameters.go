// Code generated by go-swagger; DO NOT EDIT.

package project

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/rishabh96b/teamcity-client/models"
)

// NewSetSubprojectsOrderParams creates a new SetSubprojectsOrderParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSetSubprojectsOrderParams() *SetSubprojectsOrderParams {
	return &SetSubprojectsOrderParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSetSubprojectsOrderParamsWithTimeout creates a new SetSubprojectsOrderParams object
// with the ability to set a timeout on a request.
func NewSetSubprojectsOrderParamsWithTimeout(timeout time.Duration) *SetSubprojectsOrderParams {
	return &SetSubprojectsOrderParams{
		timeout: timeout,
	}
}

// NewSetSubprojectsOrderParamsWithContext creates a new SetSubprojectsOrderParams object
// with the ability to set a context for a request.
func NewSetSubprojectsOrderParamsWithContext(ctx context.Context) *SetSubprojectsOrderParams {
	return &SetSubprojectsOrderParams{
		Context: ctx,
	}
}

// NewSetSubprojectsOrderParamsWithHTTPClient creates a new SetSubprojectsOrderParams object
// with the ability to set a custom HTTPClient for a request.
func NewSetSubprojectsOrderParamsWithHTTPClient(client *http.Client) *SetSubprojectsOrderParams {
	return &SetSubprojectsOrderParams{
		HTTPClient: client,
	}
}

/* SetSubprojectsOrderParams contains all the parameters to send to the API endpoint
   for the set subprojects order operation.

   Typically these are written to a http.Request.
*/
type SetSubprojectsOrderParams struct {

	// Body.
	Body *models.Projects

	// Field.
	Field *string

	// ProjectLocator.
	//
	// Format: ProjectLocator
	ProjectLocator string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the set subprojects order params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SetSubprojectsOrderParams) WithDefaults() *SetSubprojectsOrderParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the set subprojects order params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SetSubprojectsOrderParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the set subprojects order params
func (o *SetSubprojectsOrderParams) WithTimeout(timeout time.Duration) *SetSubprojectsOrderParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the set subprojects order params
func (o *SetSubprojectsOrderParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the set subprojects order params
func (o *SetSubprojectsOrderParams) WithContext(ctx context.Context) *SetSubprojectsOrderParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the set subprojects order params
func (o *SetSubprojectsOrderParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the set subprojects order params
func (o *SetSubprojectsOrderParams) WithHTTPClient(client *http.Client) *SetSubprojectsOrderParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the set subprojects order params
func (o *SetSubprojectsOrderParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the set subprojects order params
func (o *SetSubprojectsOrderParams) WithBody(body *models.Projects) *SetSubprojectsOrderParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the set subprojects order params
func (o *SetSubprojectsOrderParams) SetBody(body *models.Projects) {
	o.Body = body
}

// WithField adds the field to the set subprojects order params
func (o *SetSubprojectsOrderParams) WithField(field *string) *SetSubprojectsOrderParams {
	o.SetField(field)
	return o
}

// SetField adds the field to the set subprojects order params
func (o *SetSubprojectsOrderParams) SetField(field *string) {
	o.Field = field
}

// WithProjectLocator adds the projectLocator to the set subprojects order params
func (o *SetSubprojectsOrderParams) WithProjectLocator(projectLocator string) *SetSubprojectsOrderParams {
	o.SetProjectLocator(projectLocator)
	return o
}

// SetProjectLocator adds the projectLocator to the set subprojects order params
func (o *SetSubprojectsOrderParams) SetProjectLocator(projectLocator string) {
	o.ProjectLocator = projectLocator
}

// WriteToRequest writes these params to a swagger request
func (o *SetSubprojectsOrderParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if o.Field != nil {

		// query param field
		var qrField string

		if o.Field != nil {
			qrField = *o.Field
		}
		qField := qrField
		if qField != "" {

			if err := r.SetQueryParam("field", qField); err != nil {
				return err
			}
		}
	}

	// path param projectLocator
	if err := r.SetPathParam("projectLocator", o.ProjectLocator); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
