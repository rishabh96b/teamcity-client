// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/rishabh96b/teamcity-client/models"
)

// NewReplaceUserParams creates a new ReplaceUserParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewReplaceUserParams() *ReplaceUserParams {
	return &ReplaceUserParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewReplaceUserParamsWithTimeout creates a new ReplaceUserParams object
// with the ability to set a timeout on a request.
func NewReplaceUserParamsWithTimeout(timeout time.Duration) *ReplaceUserParams {
	return &ReplaceUserParams{
		timeout: timeout,
	}
}

// NewReplaceUserParamsWithContext creates a new ReplaceUserParams object
// with the ability to set a context for a request.
func NewReplaceUserParamsWithContext(ctx context.Context) *ReplaceUserParams {
	return &ReplaceUserParams{
		Context: ctx,
	}
}

// NewReplaceUserParamsWithHTTPClient creates a new ReplaceUserParams object
// with the ability to set a custom HTTPClient for a request.
func NewReplaceUserParamsWithHTTPClient(client *http.Client) *ReplaceUserParams {
	return &ReplaceUserParams{
		HTTPClient: client,
	}
}

/* ReplaceUserParams contains all the parameters to send to the API endpoint
   for the replace user operation.

   Typically these are written to a http.Request.
*/
type ReplaceUserParams struct {

	// Body.
	Body *models.User

	// Fields.
	Fields *string

	// UserLocator.
	//
	// Format: UserLocator
	UserLocator string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the replace user params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ReplaceUserParams) WithDefaults() *ReplaceUserParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the replace user params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ReplaceUserParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the replace user params
func (o *ReplaceUserParams) WithTimeout(timeout time.Duration) *ReplaceUserParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the replace user params
func (o *ReplaceUserParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the replace user params
func (o *ReplaceUserParams) WithContext(ctx context.Context) *ReplaceUserParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the replace user params
func (o *ReplaceUserParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the replace user params
func (o *ReplaceUserParams) WithHTTPClient(client *http.Client) *ReplaceUserParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the replace user params
func (o *ReplaceUserParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the replace user params
func (o *ReplaceUserParams) WithBody(body *models.User) *ReplaceUserParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the replace user params
func (o *ReplaceUserParams) SetBody(body *models.User) {
	o.Body = body
}

// WithFields adds the fields to the replace user params
func (o *ReplaceUserParams) WithFields(fields *string) *ReplaceUserParams {
	o.SetFields(fields)
	return o
}

// SetFields adds the fields to the replace user params
func (o *ReplaceUserParams) SetFields(fields *string) {
	o.Fields = fields
}

// WithUserLocator adds the userLocator to the replace user params
func (o *ReplaceUserParams) WithUserLocator(userLocator string) *ReplaceUserParams {
	o.SetUserLocator(userLocator)
	return o
}

// SetUserLocator adds the userLocator to the replace user params
func (o *ReplaceUserParams) SetUserLocator(userLocator string) {
	o.UserLocator = userLocator
}

// WriteToRequest writes these params to a swagger request
func (o *ReplaceUserParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if o.Fields != nil {

		// query param fields
		var qrFields string

		if o.Fields != nil {
			qrFields = *o.Fields
		}
		qFields := qrFields
		if qFields != "" {

			if err := r.SetQueryParam("fields", qFields); err != nil {
				return err
			}
		}
	}

	// path param userLocator
	if err := r.SetPathParam("userLocator", o.UserLocator); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
