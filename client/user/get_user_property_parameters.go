// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetUserPropertyParams creates a new GetUserPropertyParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetUserPropertyParams() *GetUserPropertyParams {
	return &GetUserPropertyParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetUserPropertyParamsWithTimeout creates a new GetUserPropertyParams object
// with the ability to set a timeout on a request.
func NewGetUserPropertyParamsWithTimeout(timeout time.Duration) *GetUserPropertyParams {
	return &GetUserPropertyParams{
		timeout: timeout,
	}
}

// NewGetUserPropertyParamsWithContext creates a new GetUserPropertyParams object
// with the ability to set a context for a request.
func NewGetUserPropertyParamsWithContext(ctx context.Context) *GetUserPropertyParams {
	return &GetUserPropertyParams{
		Context: ctx,
	}
}

// NewGetUserPropertyParamsWithHTTPClient creates a new GetUserPropertyParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetUserPropertyParamsWithHTTPClient(client *http.Client) *GetUserPropertyParams {
	return &GetUserPropertyParams{
		HTTPClient: client,
	}
}

/* GetUserPropertyParams contains all the parameters to send to the API endpoint
   for the get user property operation.

   Typically these are written to a http.Request.
*/
type GetUserPropertyParams struct {

	// Name.
	Name string

	// UserLocator.
	//
	// Format: UserLocator
	UserLocator string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get user property params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetUserPropertyParams) WithDefaults() *GetUserPropertyParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get user property params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetUserPropertyParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get user property params
func (o *GetUserPropertyParams) WithTimeout(timeout time.Duration) *GetUserPropertyParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get user property params
func (o *GetUserPropertyParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get user property params
func (o *GetUserPropertyParams) WithContext(ctx context.Context) *GetUserPropertyParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get user property params
func (o *GetUserPropertyParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get user property params
func (o *GetUserPropertyParams) WithHTTPClient(client *http.Client) *GetUserPropertyParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get user property params
func (o *GetUserPropertyParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithName adds the name to the get user property params
func (o *GetUserPropertyParams) WithName(name string) *GetUserPropertyParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the get user property params
func (o *GetUserPropertyParams) SetName(name string) {
	o.Name = name
}

// WithUserLocator adds the userLocator to the get user property params
func (o *GetUserPropertyParams) WithUserLocator(userLocator string) *GetUserPropertyParams {
	o.SetUserLocator(userLocator)
	return o
}

// SetUserLocator adds the userLocator to the get user property params
func (o *GetUserPropertyParams) SetUserLocator(userLocator string) {
	o.UserLocator = userLocator
}

// WriteToRequest writes these params to a swagger request
func (o *GetUserPropertyParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param name
	if err := r.SetPathParam("name", o.Name); err != nil {
		return err
	}

	// path param userLocator
	if err := r.SetPathParam("userLocator", o.UserLocator); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
